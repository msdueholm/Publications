setwd("C:/Users/Morten Dueholm/Dropbox/Projects/Ongoing projects/P001_AutoTax/Manuscript/Submission for mBio/Revision2/R-scripts_for_Github_Silva138/Figure_3b_S5a")
library(tidyverse)
# Read mapping results
read_amp_classification <- function(input) {
map <- read.delim(input,
sep = "\t",
header = FALSE,
quote = "\"",
fill = TRUE,
check.names = FALSE,
stringsAsFactors = FALSE) %>%
select(1,4) %>%
rename(ESV = V1) %>%
arrange(readr::parse_number(ESV)) %>%
mutate(ESV = str_replace_all(ESV, "[:blank:].*", "")) %>%
mutate(V4 = str_replace_all(V4, c("d:"), "")) %>%
mutate(V4 = str_replace_all(V4, c(",p:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",c:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",o:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",f:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",g:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",s:"), ",")) %>%
separate(V4,sep=",", into = c("ASV_Domain", "ASV_Phylum", "ASV_Order", "ASV_Class", "ASV_Familiy", "ASV_Genus", "ASV_Species" )) %>%
mutate(Amplicon=!!gsub("data/(.+)_vs_AutoTax.sintax", "\\1", paste(input))) %>%
separate(Amplicon,sep="-", into = c("Primerset", "Fragment"))
}
a <- read_amp_classification("data/V13-Complete_vs_AutoTax.sintax")
b <- read_amp_classification("data/V13-200bp_Forward_vs_AutoTax.sintax")
c <- read_amp_classification("data/V13-200bp_Reverse_vs_AutoTax.sintax")
d <- read_amp_classification("data/V4-Complete_vs_AutoTax.sintax")
e <- read_amp_classification("data/V4-200bp_Forward_vs_AutoTax.sintax")
f <- read_amp_classification("data/V4-200bp_Reverse_vs_AutoTax.sintax")
g <- read_amp_classification("data/V18-Complete_vs_AutoTax.sintax")
h <- read_amp_classification("data/V19-Complete_vs_AutoTax.sintax")
i <- read_amp_classification("data/V34-Complete_vs_AutoTax.sintax")
j <- read_amp_classification("data/V34-200bp_Forward_vs_AutoTax.sintax")
k <- read_amp_classification("data/V34-200bp_Reverse_vs_AutoTax.sintax")
l <- read_amp_classification("data/V35-Complete_vs_AutoTax.sintax")
m <- read_amp_classification("data/V35-200bp_Forward_vs_AutoTax.sintax")
n <- read_amp_classification("data/V35-200bp_Reverse_vs_AutoTax.sintax")
o <- read_amp_classification("data/V45-Complete_vs_AutoTax.sintax")
p <- read_amp_classification("data/V45-200bp_Forward_vs_AutoTax.sintax")
q <- read_amp_classification("data/V45-200bp_Reverse_vs_AutoTax.sintax")
r <- read_amp_classification("data/V57-Complete_vs_AutoTax.sintax")
s <- read_amp_classification("data/V57-200bp_Forward_vs_AutoTax.sintax")
t <- read_amp_classification("data/V57-200bp_Reverse_vs_AutoTax.sintax")
u <- read_amp_classification("data/V58-Complete_vs_AutoTax.sintax")
v <- read_amp_classification("data/V58-200bp_Forward_vs_AutoTax.sintax")
w <- read_amp_classification("data/V58-200bp_Reverse_vs_AutoTax.sintax")
Merged_classifications <- bind_rows(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w)
# Read reference taxonomy
Tax_ref <- read.delim("data/tax_complete.csv",
sep = ",",
header = TRUE,
quote = "\"",
fill = TRUE,
check.names = FALSE,
stringsAsFactors = FALSE) %>%
rename(ESV=1) %>%
arrange(readr::parse_number(ESV))
# Merge ASV table and mappings
df <- left_join(Tax_ref, Merged_classifications, by="ESV") %>% replace(.,is.na(.),0) %>%
mutate(Primerset = factor(Primerset, levels = c("V13","V34","V35","V4","V45","V57","V58","V18","V19"))) %>%
mutate(Fragment = factor(Fragment, levels = c("Complete","200bp_Forward","200bp_Reverse")))
Summary_genera <- df %>%
group_by(Primerset,Fragment) %>%
summarize("Correct_classification"=sum(Genus==ASV_Genus)/n()*100,
"Not_classified"=sum(ASV_Genus=="0")/n()*100,
"Wrong_classification"=100-Correct_classification-Not_classified,
"Taxonomic_rank"="Genus") %>%
gather(3:5, key="Classification", value="Percentage")
Summary_species <- df %>%
group_by(Primerset,Fragment) %>%
summarize("Correct_classification"=sum(Species==ASV_Species)/n()*100,
"Not_classified"=sum(ASV_Species=="0")/n()*100,
"Wrong_classification"=100-Correct_classification-Not_classified,
"Taxonomic_rank"="Species") %>%
gather(3:5, key="Classification", value="Percentage")
Summary <- rbind(Summary_genera, Summary_species)
Summary1 <- filter(Summary, Fragment=="Complete")
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0,100,10))
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=10, height=6, useDingbats=FALSE, limitsize=FALSE)
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=10, height=6, useDingbats=FALSE, limitsize=FALSE)
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=6, useDingbats=FALSE, limitsize=FALSE)
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
View(Summary_genera)
p1
View(df)
View(Summary_genera)
View(u)
View(v)
View(t)
library(tidyverse)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Read mapping results
read_amp_classification <- function(input) {
map <- read.delim(input,
sep = "\t",
header = FALSE,
quote = "\"",
fill = TRUE,
check.names = FALSE,
stringsAsFactors = FALSE) %>%
select(1,4) %>%
rename(ESV = V1) %>%
arrange(readr::parse_number(ESV)) %>%
mutate(ESV = str_replace_all(ESV, "[:blank:].*", "")) %>%
mutate(V4 = str_replace_all(V4, c("d:"), "")) %>%
mutate(V4 = str_replace_all(V4, c(",p:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",c:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",o:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",f:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",g:"), ",")) %>%
mutate(V4 = str_replace_all(V4, c(",s:"), ",")) %>%
separate(V4,sep=",", into = c("ASV_Domain", "ASV_Phylum", "ASV_Order", "ASV_Class", "ASV_Familiy", "ASV_Genus", "ASV_Species" )) %>%
mutate(Amplicon=!!gsub("data/(.+)_vs_AutoTax.sintax", "\\1", paste(input))) %>%
separate(Amplicon,sep="-", into = c("Primerset", "Fragment"))
}
a <- read_amp_classification("data/V13-Complete_vs_AutoTax.sintax")
b <- read_amp_classification("data/V13-200bp_Forward_vs_AutoTax.sintax")
c <- read_amp_classification("data/V13-200bp_Reverse_vs_AutoTax.sintax")
d <- read_amp_classification("data/V4-Complete_vs_AutoTax.sintax")
e <- read_amp_classification("data/V4-200bp_Forward_vs_AutoTax.sintax")
f <- read_amp_classification("data/V4-200bp_Reverse_vs_AutoTax.sintax")
g <- read_amp_classification("data/V18-Complete_vs_AutoTax.sintax")
h <- read_amp_classification("data/V19-Complete_vs_AutoTax.sintax")
i <- read_amp_classification("data/V34-Complete_vs_AutoTax.sintax")
j <- read_amp_classification("data/V34-200bp_Forward_vs_AutoTax.sintax")
k <- read_amp_classification("data/V34-200bp_Reverse_vs_AutoTax.sintax")
l <- read_amp_classification("data/V35-Complete_vs_AutoTax.sintax")
m <- read_amp_classification("data/V35-200bp_Forward_vs_AutoTax.sintax")
n <- read_amp_classification("data/V35-200bp_Reverse_vs_AutoTax.sintax")
o <- read_amp_classification("data/V45-Complete_vs_AutoTax.sintax")
p <- read_amp_classification("data/V45-200bp_Forward_vs_AutoTax.sintax")
q <- read_amp_classification("data/V45-200bp_Reverse_vs_AutoTax.sintax")
r <- read_amp_classification("data/V57-Complete_vs_AutoTax.sintax")
s <- read_amp_classification("data/V57-200bp_Forward_vs_AutoTax.sintax")
t <- read_amp_classification("data/V57-200bp_Reverse_vs_AutoTax.sintax")
u <- read_amp_classification("data/V58-Complete_vs_AutoTax.sintax")
v <- read_amp_classification("data/V58-200bp_Forward_vs_AutoTax.sintax")
w <- read_amp_classification("data/V58-200bp_Reverse_vs_AutoTax.sintax")
Merged_classifications <- bind_rows(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w)
# Read reference taxonomy
Tax_ref <- read.delim("data/tax_complete.csv",
sep = ",",
header = TRUE,
quote = "\"",
fill = TRUE,
check.names = FALSE,
stringsAsFactors = FALSE) %>%
rename(ESV=1) %>%
arrange(readr::parse_number(ESV))
# Merge ASV table and mappings
df <- left_join(Tax_ref, Merged_classifications, by="ESV") %>% replace(.,is.na(.),0) %>%
mutate(Primerset = factor(Primerset, levels = c("V13","V34","V35","V4","V45","V57","V58","V18","V19"))) %>%
mutate(Fragment = factor(Fragment, levels = c("Complete","200bp_Forward","200bp_Reverse")))
Summary_genera <- df %>%
group_by(Primerset,Fragment) %>%
summarize("Correct_classification"=sum(Genus==ASV_Genus)/n()*100,
"Not_classified"=sum(ASV_Genus=="0")/n()*100,
"Wrong_classification"=100-Correct_classification-Not_classified,
"Taxonomic_rank"="Genus") %>%
gather(3:5, key="Classification", value="Percentage")
Summary_species <- df %>%
group_by(Primerset,Fragment) %>%
summarize("Correct_classification"=sum(Species==ASV_Species)/n()*100,
"Not_classified"=sum(ASV_Species=="0")/n()*100,
"Wrong_classification"=100-Correct_classification-Not_classified,
"Taxonomic_rank"="Species") %>%
gather(3:5, key="Classification", value="Percentage")
Summary <- rbind(Summary_genera, Summary_species)
Summary1 <- filter(Summary, Fragment=="Complete")
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0,100,10))
p1
View(Summary_genera)
Summary_genera <- df %>%
group_by(Primerset,Fragment) %>%
summarize("Correct_classification"=sum(Genus==ASV_Genus)/n()*100,
"Not_classified"=sum(ASV_Genus=="0")/n()*100,
"Wrong_classification"=sum(ASV_Genus!="0" & Genus!=ASV_Genus)/n()*100,
"Taxonomic_rank"="Genus") %>%
gather(3:5, key="Classification", value="Percentage")
Summary_genera <- df %>%
group_by(Primerset,Fragment) %>%
summarize("Correct_classification"=sum(Genus==ASV_Genus)/n()*100,
"Not_classified"=sum(ASV_Genus=="0")/n()*100,
"Wrong_classification"=sum(ASV_Genus!="0" & Genus!=ASV_Genus)/n()*100,
"Taxonomic_rank"="Genus") %>%
gather(3:5, key="Classification", value="Percentage")
Summary_species <- df %>%
group_by(Primerset,Fragment) %>%
summarize("Correct_classification"=sum(Species==ASV_Species)/n()*100,
"Not_classified"=sum(ASV_Species=="0")/n()*100,
"Wrong_classification"=sum(ASV_Species!="0" & Species!=ASV_Species)/n()*100,
"Taxonomic_rank"="Species") %>%
gather(3:5, key="Classification", value="Percentage")
Summary <- rbind(Summary_genera, Summary_species)
Summary1 <- filter(Summary, Fragment=="Complete")
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0,100,10))
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
Summary_genera <- df %>%
group_by(Primerset,Fragment) %>%
summarize("Correct_classification"=sum(Genus==ASV_Genus)/n()*100,
"Not_classified"=sum(ASV_Genus=="0")/n()*100,
"Wrong_classification"=sum(ASV_Genus!="0" & Genus!=ASV_Genus)/n()*100,
"Taxonomic_rank"="Genus") %>%
gather(3:5, key="Classification", value="Percentage")
Summary_species <- df %>%
group_by(Primerset,Fragment) %>%
summarize("Correct_classification"=sum(Species==ASV_Species)/n()*100,
"Not_classified"=sum(ASV_Species=="0")/n()*100,
"Wrong_classification"=sum(ASV_Species!="0" & Species!=ASV_Species)/n()*100,
"Taxonomic_rank"="Species") %>%
gather(3:5, key="Classification", value="Percentage")
Summary <- rbind(Summary_genera, Summary_species)
Summary1 <- filter(Summary, Fragment=="Complete")
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0,100,10))
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
View(Summary1)
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0,100,10))
p1
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0,100,10))
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
p1
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
ggsave(filename="output/FigureS5a2.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
View(Summary_genera)
View(Summary_species)
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0,100,10))
Summary1 <- filter(Summary, Fragment=="Complete")
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(limits = c(0, 100), breaks=seq(0,100,10))
View(Summary1)
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
#scale_y_continuous(limits = c(0, 100), breaks=seq(0,100,10))
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank())
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
p2 <- ggplot(data=Summary2, aes(x=Primerset, y=Percentage, fill=Fragment)) +
theme_bw() +
geom_bar(color="black",stat="identity",position = position_dodge(preserve = 'single'), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in silico ASVs correctly classified") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(breaks=seq(0,100,10))
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent in Silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(breaks=seq(0,100,10))
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=4, useDingbats=FALSE, limitsize=FALSE)
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=3, useDingbats=FALSE, limitsize=FALSE)
p1 <- ggplot(data=Summary1, aes(x=Primerset, y=Percentage, fill=Classification)) +
theme_bw() +
geom_bar(color="black",stat="identity", position = position_stack(reverse = TRUE), width=0.8) +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust = 1)) +
scale_fill_brewer(palette="RdYlBu")+
ylab("Percent of in silico ASVs") +
facet_grid(.~Taxonomic_rank) +
theme(axis.title.x=element_blank()) +
scale_y_continuous(breaks=seq(0,100,10))
ggsave(filename="output/FigureS5a.pdf", plot=p1, width=8, height=3.5, useDingbats=FALSE, limitsize=FALSE)
